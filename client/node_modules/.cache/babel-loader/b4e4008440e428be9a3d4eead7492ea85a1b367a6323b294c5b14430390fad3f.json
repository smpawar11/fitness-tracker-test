{"ast":null,"code":"var _jsxFileName = \"/Users/sumedhpawar/fitness-tracker-app/client/src/components/goals/GoalTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoalTracker = ({\n  auth\n}) => {\n  _s();\n  const [goals, setGoals] = useState([]);\n  const [newGoal, setNewGoal] = useState({\n    title: '',\n    description: '',\n    type: 'weight',\n    target: '',\n    deadline: '',\n    current: '',\n    unit: ''\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    // In a real app, you would fetch this data from your backend\n    const fetchGoals = async () => {\n      try {\n        // Example of how you would fetch data in a real implementation\n        // const res = await fetch('http://localhost:5000/api/goals', {\n        //   headers: {\n        //     'x-auth-token': localStorage.token\n        //   }\n        // });\n        // const data = await res.json();\n        // setGoals(data);\n\n        // For now, we'll use dummy data\n        setGoals([{\n          id: '1',\n          title: 'Weight Loss',\n          description: 'Lose weight for summer',\n          type: 'weight',\n          target: 75,\n          current: 80,\n          unit: 'kg',\n          deadline: '2025-07-01',\n          progress: 50\n        }, {\n          id: '2',\n          title: '5K Run',\n          description: 'Train for charity 5K run',\n          type: 'endurance',\n          target: 5,\n          current: 3,\n          unit: 'km',\n          deadline: '2025-06-15',\n          progress: 60\n        }]);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching goals:', err);\n        setError('Failed to load goals');\n        setLoading(false);\n      }\n    };\n    fetchGoals();\n  }, []);\n  const handleInputChange = e => {\n    setNewGoal({\n      ...newGoal,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Example of how you would post data in a real implementation\n      // const res = await fetch('http://localhost:5000/api/goals', {\n      //   method: 'POST',\n      //   headers: {\n      //     'Content-Type': 'application/json',\n      //     'x-auth-token': localStorage.token\n      //   },\n      //   body: JSON.stringify(newGoal)\n      // });\n      // const data = await res.json();\n\n      // For now, we'll add it directly to the state\n      const newGoalWithId = {\n        ...newGoal,\n        id: Date.now().toString(),\n        progress: 0 // Starting progress is 0%\n      };\n      setGoals([newGoalWithId, ...goals]);\n\n      // Reset the form\n      setNewGoal({\n        title: '',\n        description: '',\n        type: 'weight',\n        target: '',\n        deadline: '',\n        current: '',\n        unit: ''\n      });\n    } catch (err) {\n      console.error('Error adding goal:', err);\n      setError('Failed to add goal');\n    }\n  };\n  const handleUpdateProgress = async (id, progress) => {\n    try {\n      // Example of how you would update data in a real implementation\n      // const res = await fetch(`http://localhost:5000/api/goals/${id}`, {\n      //   method: 'PATCH',\n      //   headers: {\n      //     'Content-Type': 'application/json',\n      //     'x-auth-token': localStorage.token\n      //   },\n      //   body: JSON.stringify({ progress })\n      // });\n\n      // For now, we'll update it directly in the state\n      setGoals(goals.map(goal => goal.id === id ? {\n        ...goal,\n        progress\n      } : goal));\n    } catch (err) {\n      console.error('Error updating goal progress:', err);\n      setError('Failed to update goal progress');\n    }\n  };\n\n  // Helper function to get appropriate units based on goal type\n  const getUnitOptions = type => {\n    switch (type) {\n      case 'weight':\n        return ['kg', 'lbs'];\n      case 'strength':\n        return ['kg', 'lbs', 'reps'];\n      case 'endurance':\n        return ['km', 'miles', 'minutes'];\n      case 'nutrition':\n        return ['calories', 'g', 'meals'];\n      default:\n        return ['kg', 'lbs', 'reps', 'km', 'miles', 'minutes', 'calories', 'g', 'meals'];\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"goal-tracker\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Goal Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"goal-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create New Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            children: \"Goal Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            name: \"title\",\n            value: newGoal.title,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"description\",\n            name: \"description\",\n            value: newGoal.description,\n            onChange: handleInputChange,\n            rows: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"type\",\n            children: \"Goal Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"type\",\n            name: \"type\",\n            value: newGoal.type,\n            onChange: handleInputChange,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"weight\",\n              children: \"Weight\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"strength\",\n              children: \"Strength\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"endurance\",\n              children: \"Endurance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"nutrition\",\n              children: \"Nutrition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"other\",\n              children: \"Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"current\",\n              children: \"Current\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"current\",\n              name: \"current\",\n              value: newGoal.current,\n              onChange: handleInputChange,\n              step: \"0.01\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"target\",\n              children: \"Target\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"target\",\n              name: \"target\",\n              value: newGoal.target,\n              onChange: handleInputChange,\n              step: \"0.01\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"unit\",\n              children: \"Unit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"unit\",\n              name: \"unit\",\n              value: newGoal.unit,\n              onChange: handleInputChange,\n              required: true,\n              children: getUnitOptions(newGoal.type).map(unit => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: unit,\n                children: unit\n              }, unit, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"deadline\",\n            children: \"Target Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"deadline\",\n            name: \"deadline\",\n            value: newGoal.deadline,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Create Goal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"goal-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Goals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), goals.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No goals set yet. Create your first goal to start tracking!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"goal-cards\",\n        children: goals.map(goal => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"goal-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: goal.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 17\n          }, this), goal.description && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"goal-description\",\n            children: goal.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"goal-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Type:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 22\n              }, this), \" \", goal.type]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Target:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 22\n              }, this), \" \", goal.target, \" \", goal.unit]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Current:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 22\n              }, this), \" \", goal.current, \" \", goal.unit]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Deadline:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 22\n              }, this), \" \", new Date(goal.deadline).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Progress: \", goal.progress, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-fill\",\n                style: {\n                  width: `${goal.progress}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"0\",\n              max: \"100\",\n              value: goal.progress,\n              onChange: e => handleUpdateProgress(goal.id, parseInt(e.target.value)),\n              className: \"progress-slider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 17\n          }, this)]\n        }, goal.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s(GoalTracker, \"36HwhXiENAfjvXE+Pwv+Y7yutko=\");\n_c = GoalTracker;\nexport default GoalTracker;\nvar _c;\n$RefreshReg$(_c, \"GoalTracker\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GoalTracker","auth","_s","goals","setGoals","newGoal","setNewGoal","title","description","type","target","deadline","current","unit","loading","setLoading","error","setError","fetchGoals","id","progress","err","console","handleInputChange","e","name","value","handleSubmit","preventDefault","newGoalWithId","Date","now","toString","handleUpdateProgress","map","goal","getUnitOptions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","required","rows","step","length","toLocaleDateString","style","width","min","max","parseInt","_c","$RefreshReg$"],"sources":["/Users/sumedhpawar/fitness-tracker-app/client/src/components/goals/GoalTracker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst GoalTracker = ({ auth }) => {\n  const [goals, setGoals] = useState([]);\n  const [newGoal, setNewGoal] = useState({\n    title: '',\n    description: '',\n    type: 'weight',\n    target: '',\n    deadline: '',\n    current: '',\n    unit: ''\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    // In a real app, you would fetch this data from your backend\n    const fetchGoals = async () => {\n      try {\n        // Example of how you would fetch data in a real implementation\n        // const res = await fetch('http://localhost:5000/api/goals', {\n        //   headers: {\n        //     'x-auth-token': localStorage.token\n        //   }\n        // });\n        // const data = await res.json();\n        // setGoals(data);\n\n        // For now, we'll use dummy data\n        setGoals([\n          {\n            id: '1',\n            title: 'Weight Loss',\n            description: 'Lose weight for summer',\n            type: 'weight',\n            target: 75,\n            current: 80,\n            unit: 'kg',\n            deadline: '2025-07-01',\n            progress: 50\n          },\n          {\n            id: '2',\n            title: '5K Run',\n            description: 'Train for charity 5K run',\n            type: 'endurance',\n            target: 5,\n            current: 3,\n            unit: 'km',\n            deadline: '2025-06-15',\n            progress: 60\n          }\n        ]);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching goals:', err);\n        setError('Failed to load goals');\n        setLoading(false);\n      }\n    };\n\n    fetchGoals();\n  }, []);\n\n  const handleInputChange = (e) => {\n    setNewGoal({\n      ...newGoal,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    try {\n      // Example of how you would post data in a real implementation\n      // const res = await fetch('http://localhost:5000/api/goals', {\n      //   method: 'POST',\n      //   headers: {\n      //     'Content-Type': 'application/json',\n      //     'x-auth-token': localStorage.token\n      //   },\n      //   body: JSON.stringify(newGoal)\n      // });\n      // const data = await res.json();\n      \n      // For now, we'll add it directly to the state\n      const newGoalWithId = {\n        ...newGoal,\n        id: Date.now().toString(),\n        progress: 0 // Starting progress is 0%\n      };\n      \n      setGoals([newGoalWithId, ...goals]);\n      \n      // Reset the form\n      setNewGoal({\n        title: '',\n        description: '',\n        type: 'weight',\n        target: '',\n        deadline: '',\n        current: '',\n        unit: ''\n      });\n    } catch (err) {\n      console.error('Error adding goal:', err);\n      setError('Failed to add goal');\n    }\n  };\n\n  const handleUpdateProgress = async (id, progress) => {\n    try {\n      // Example of how you would update data in a real implementation\n      // const res = await fetch(`http://localhost:5000/api/goals/${id}`, {\n      //   method: 'PATCH',\n      //   headers: {\n      //     'Content-Type': 'application/json',\n      //     'x-auth-token': localStorage.token\n      //   },\n      //   body: JSON.stringify({ progress })\n      // });\n      \n      // For now, we'll update it directly in the state\n      setGoals(goals.map(goal => \n        goal.id === id ? { ...goal, progress } : goal\n      ));\n    } catch (err) {\n      console.error('Error updating goal progress:', err);\n      setError('Failed to update goal progress');\n    }\n  };\n\n  // Helper function to get appropriate units based on goal type\n  const getUnitOptions = (type) => {\n    switch(type) {\n      case 'weight':\n        return ['kg', 'lbs'];\n      case 'strength':\n        return ['kg', 'lbs', 'reps'];\n      case 'endurance':\n        return ['km', 'miles', 'minutes'];\n      case 'nutrition':\n        return ['calories', 'g', 'meals'];\n      default:\n        return ['kg', 'lbs', 'reps', 'km', 'miles', 'minutes', 'calories', 'g', 'meals'];\n    }\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading...</div>;\n  }\n\n  return (\n    <div className=\"goal-tracker\">\n      <h1>Goal Tracker</h1>\n      \n      {error && <div className=\"error-message\">{error}</div>}\n      \n      <div className=\"goal-form-container\">\n        <h2>Create New Goal</h2>\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"title\">Goal Title</label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              name=\"title\"\n              value={newGoal.title}\n              onChange={handleInputChange}\n              required\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"description\">Description</label>\n            <textarea\n              id=\"description\"\n              name=\"description\"\n              value={newGoal.description}\n              onChange={handleInputChange}\n              rows=\"3\"\n            ></textarea>\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"type\">Goal Type</label>\n            <select\n              id=\"type\"\n              name=\"type\"\n              value={newGoal.type}\n              onChange={handleInputChange}\n              required\n            >\n              <option value=\"weight\">Weight</option>\n              <option value=\"strength\">Strength</option>\n              <option value=\"endurance\">Endurance</option>\n              <option value=\"nutrition\">Nutrition</option>\n              <option value=\"other\">Other</option>\n            </select>\n          </div>\n          \n          <div className=\"form-row\">\n            <div className=\"form-group\">\n              <label htmlFor=\"current\">Current</label>\n              <input\n                type=\"number\"\n                id=\"current\"\n                name=\"current\"\n                value={newGoal.current}\n                onChange={handleInputChange}\n                step=\"0.01\"\n                required\n              />\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"target\">Target</label>\n              <input\n                type=\"number\"\n                id=\"target\"\n                name=\"target\"\n                value={newGoal.target}\n                onChange={handleInputChange}\n                step=\"0.01\"\n                required\n              />\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"unit\">Unit</label>\n              <select\n                id=\"unit\"\n                name=\"unit\"\n                value={newGoal.unit}\n                onChange={handleInputChange}\n                required\n              >\n                {getUnitOptions(newGoal.type).map(unit => (\n                  <option key={unit} value={unit}>{unit}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"deadline\">Target Date</label>\n            <input\n              type=\"date\"\n              id=\"deadline\"\n              name=\"deadline\"\n              value={newGoal.deadline}\n              onChange={handleInputChange}\n              required\n            />\n          </div>\n          \n          <button type=\"submit\" className=\"btn btn-primary\">Create Goal</button>\n        </form>\n      </div>\n      \n      <div className=\"goal-list\">\n        <h2>Your Goals</h2>\n        {goals.length === 0 ? (\n          <p>No goals set yet. Create your first goal to start tracking!</p>\n        ) : (\n          <div className=\"goal-cards\">\n            {goals.map(goal => (\n              <div key={goal.id} className=\"goal-card\">\n                <h3>{goal.title}</h3>\n                {goal.description && <p className=\"goal-description\">{goal.description}</p>}\n                \n                <div className=\"goal-details\">\n                  <p><strong>Type:</strong> {goal.type}</p>\n                  <p><strong>Target:</strong> {goal.target} {goal.unit}</p>\n                  <p><strong>Current:</strong> {goal.current} {goal.unit}</p>\n                  <p><strong>Deadline:</strong> {new Date(goal.deadline).toLocaleDateString()}</p>\n                </div>\n                \n                <div className=\"progress-container\">\n                  <label>Progress: {goal.progress}%</label>\n                  <div className=\"progress-bar\">\n                    <div \n                      className=\"progress-fill\" \n                      style={{width: `${goal.progress}%`}}\n                    ></div>\n                  </div>\n                  <input\n                    type=\"range\"\n                    min=\"0\"\n                    max=\"100\"\n                    value={goal.progress}\n                    onChange={(e) => handleUpdateProgress(goal.id, parseInt(e.target.value))}\n                    className=\"progress-slider\"\n                  />\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default GoalTracker;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}