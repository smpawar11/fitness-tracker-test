{"ast":null,"code":"var _jsxFileName = \"/Users/sumedhpawar/fitness-tracker-test/fitness-tracker-test/client/src/components/groups/GroupDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupDetail = ({\n  auth\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [group, setGroup] = useState(null);\n  const [members, setMembers] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [newPost, setNewPost] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchGroupDetails = async () => {\n      try {\n        // Example of how you would fetch data in a real implementation\n        // const groupRes = await fetch(`http://localhost:5000/api/groups/${id}`, {\n        //   headers: {\n        //     'x-auth-token': localStorage.token\n        //   }\n        // });\n        // const groupData = await groupRes.json();\n        // setGroup(groupData);\n\n        // For now, we'll use dummy data\n        setGroup({\n          id,\n          name: 'Morning Runners',\n          description: 'A group for early morning runners who love to start their day with exercise',\n          type: 'cardio',\n          memberCount: 24,\n          isPrivate: false,\n          inviteCode: 'run2025',\n          createdBy: {\n            id: '123',\n            name: 'Jane Runner'\n          },\n          createdAt: '2025-03-10T08:00:00.000Z'\n        });\n\n        // Simulating members fetch\n        setMembers([{\n          id: '123',\n          name: 'Jane Runner',\n          role: 'admin',\n          joinedDate: '2025-03-10T08:00:00.000Z'\n        }, {\n          id: '456',\n          name: 'John Jogger',\n          role: 'member',\n          joinedDate: '2025-03-11T08:00:00.000Z'\n        }, {\n          id: '789',\n          name: 'Mary Miles',\n          role: 'member',\n          joinedDate: '2025-03-12T08:00:00.000Z'\n        }]);\n\n        // Simulating posts fetch\n        setPosts([{\n          id: '1',\n          content: 'Just finished a 5k in 22 minutes! New personal best!',\n          author: {\n            id: '456',\n            name: 'John Jogger'\n          },\n          createdAt: '2025-04-16T07:30:00.000Z',\n          likes: 8,\n          comments: [{\n            id: '1001',\n            content: 'That\\'s amazing! Congrats!',\n            author: {\n              id: '123',\n              name: 'Jane Runner'\n            },\n            createdAt: '2025-04-16T07:45:00.000Z'\n          }]\n        }, {\n          id: '2',\n          content: 'Morning run by the lake today - beautiful sunrise!',\n          author: {\n            id: '123',\n            name: 'Jane Runner'\n          },\n          createdAt: '2025-04-15T06:20:00.000Z',\n          likes: 12,\n          comments: []\n        }]);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching group details:', err);\n        setError('Failed to load group details');\n        setLoading(false);\n      }\n    };\n    fetchGroupDetails();\n  }, [id]);\n  const handlePostSubmit = async e => {\n    e.preventDefault();\n    if (!newPost.trim()) return;\n    try {\n      var _auth$user, _auth$user2;\n      // Example of how you would post data in a real implementation\n      // const res = await fetch(`http://localhost:5000/api/groups/${id}/posts`, {\n      //   method: 'POST',\n      //   headers: {\n      //     'Content-Type': 'application/json',\n      //     'x-auth-token': localStorage.token\n      //   },\n      //   body: JSON.stringify({ content: newPost })\n      // });\n      // const data = await res.json();\n\n      // For now, we'll add it directly to the state\n      const newPostData = {\n        id: Date.now().toString(),\n        content: newPost,\n        author: {\n          id: ((_auth$user = auth.user) === null || _auth$user === void 0 ? void 0 : _auth$user.id) || 'current-user',\n          name: ((_auth$user2 = auth.user) === null || _auth$user2 === void 0 ? void 0 : _auth$user2.name) || 'Current User'\n        },\n        createdAt: new Date().toISOString(),\n        likes: 0,\n        comments: []\n      };\n      setPosts([newPostData, ...posts]);\n      setNewPost('');\n    } catch (err) {\n      console.error('Error creating post:', err);\n      setError('Failed to create post');\n    }\n  };\n  const formatDate = dateString => {\n    const options = {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading group details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 12\n    }, this);\n  }\n  if (!group) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: \"Group not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"group-detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: group.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"group-description\",\n        children: group.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-meta\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Focus:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 14\n          }, this), \" \", group.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Members:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 14\n          }, this), \" \", group.memberCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Created:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 14\n          }, this), \" \", formatDate(group.createdAt)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Invite Code:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 14\n          }, this), \" \", group.inviteCode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"posts-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Group Activity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"post-form\",\n          onSubmit: handlePostSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Share an update with the group...\",\n            value: newPost,\n            onChange: e => setNewPost(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"posts-list\",\n          children: posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No activity yet. Be the first to post!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this) : posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"post-author\",\n                children: post.author.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"post-date\",\n                children: formatDate(post.createdAt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-content\",\n              children: post.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-text\",\n                children: [\"Like (\", post.likes, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-text\",\n                children: \"Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this), post.comments.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comments-list\",\n              children: post.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comment\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"comment-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"comment-author\",\n                    children: comment.author.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"comment-date\",\n                    children: formatDate(comment.createdAt)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"comment-content\",\n                  children: comment.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 27\n                }, this)]\n              }, comment.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 21\n            }, this)]\n          }, post.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"members-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Members (\", members.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"members-list\",\n          children: members.map(member => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"member-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"member-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"member-name\",\n                children: member.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 19\n              }, this), member.role === 'admin' && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"member-badge\",\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 47\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"member-joined\",\n              children: [\"Joined \", formatDate(member.joinedDate)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)]\n          }, member.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-actions\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/groups\",\n        className: \"btn btn-outline\",\n        children: \"Back to Groups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        children: \"Invite Members\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline\",\n        children: \"Leave Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_s(GroupDetail, \"ETZhxnfJvO01aZVlXcsp1rjY3kY=\", false, function () {\n  return [useParams];\n});\n_c = GroupDetail;\nexport default GroupDetail;\nvar _c;\n$RefreshReg$(_c, \"GroupDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","jsxDEV","_jsxDEV","GroupDetail","auth","_s","id","group","setGroup","members","setMembers","posts","setPosts","newPost","setNewPost","loading","setLoading","error","setError","fetchGroupDetails","name","description","type","memberCount","isPrivate","inviteCode","createdBy","createdAt","role","joinedDate","content","author","likes","comments","err","console","handlePostSubmit","e","preventDefault","trim","_auth$user","_auth$user2","newPostData","Date","now","toString","user","toISOString","formatDate","dateString","options","year","month","day","toLocaleDateString","undefined","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","value","onChange","target","required","length","map","post","comment","member","to","_c","$RefreshReg$"],"sources":["/Users/sumedhpawar/fitness-tracker-test/fitness-tracker-test/client/src/components/groups/GroupDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\n\nconst GroupDetail = ({ auth }) => {\n  const { id } = useParams();\n  \n  const [group, setGroup] = useState(null);\n  const [members, setMembers] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [newPost, setNewPost] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchGroupDetails = async () => {\n      try {\n        // Example of how you would fetch data in a real implementation\n        // const groupRes = await fetch(`http://localhost:5000/api/groups/${id}`, {\n        //   headers: {\n        //     'x-auth-token': localStorage.token\n        //   }\n        // });\n        // const groupData = await groupRes.json();\n        // setGroup(groupData);\n        \n        // For now, we'll use dummy data\n        setGroup({\n          id,\n          name: 'Morning Runners',\n          description: 'A group for early morning runners who love to start their day with exercise',\n          type: 'cardio',\n          memberCount: 24,\n          isPrivate: false,\n          inviteCode: 'run2025',\n          createdBy: {\n            id: '123',\n            name: 'Jane Runner'\n          },\n          createdAt: '2025-03-10T08:00:00.000Z'\n        });\n        \n        // Simulating members fetch\n        setMembers([\n          {\n            id: '123',\n            name: 'Jane Runner',\n            role: 'admin',\n            joinedDate: '2025-03-10T08:00:00.000Z'\n          },\n          {\n            id: '456',\n            name: 'John Jogger',\n            role: 'member',\n            joinedDate: '2025-03-11T08:00:00.000Z'\n          },\n          {\n            id: '789',\n            name: 'Mary Miles',\n            role: 'member',\n            joinedDate: '2025-03-12T08:00:00.000Z'\n          }\n        ]);\n        \n        // Simulating posts fetch\n        setPosts([\n          {\n            id: '1',\n            content: 'Just finished a 5k in 22 minutes! New personal best!',\n            author: {\n              id: '456',\n              name: 'John Jogger'\n            },\n            createdAt: '2025-04-16T07:30:00.000Z',\n            likes: 8,\n            comments: [\n              {\n                id: '1001',\n                content: 'That\\'s amazing! Congrats!',\n                author: {\n                  id: '123',\n                  name: 'Jane Runner'\n                },\n                createdAt: '2025-04-16T07:45:00.000Z'\n              }\n            ]\n          },\n          {\n            id: '2',\n            content: 'Morning run by the lake today - beautiful sunrise!',\n            author: {\n              id: '123',\n              name: 'Jane Runner'\n            },\n            createdAt: '2025-04-15T06:20:00.000Z',\n            likes: 12,\n            comments: []\n          }\n        ]);\n        \n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching group details:', err);\n        setError('Failed to load group details');\n        setLoading(false);\n      }\n    };\n\n    fetchGroupDetails();\n  }, [id]);\n\n  const handlePostSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!newPost.trim()) return;\n    \n    try {\n      // Example of how you would post data in a real implementation\n      // const res = await fetch(`http://localhost:5000/api/groups/${id}/posts`, {\n      //   method: 'POST',\n      //   headers: {\n      //     'Content-Type': 'application/json',\n      //     'x-auth-token': localStorage.token\n      //   },\n      //   body: JSON.stringify({ content: newPost })\n      // });\n      // const data = await res.json();\n      \n      // For now, we'll add it directly to the state\n      const newPostData = {\n        id: Date.now().toString(),\n        content: newPost,\n        author: {\n          id: auth.user?.id || 'current-user',\n          name: auth.user?.name || 'Current User'\n        },\n        createdAt: new Date().toISOString(),\n        likes: 0,\n        comments: []\n      };\n      \n      setPosts([newPostData, ...posts]);\n      setNewPost('');\n    } catch (err) {\n      console.error('Error creating post:', err);\n      setError('Failed to create post');\n    }\n  };\n\n  const formatDate = (dateString) => {\n    const options = { year: 'numeric', month: 'short', day: 'numeric' };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading group details...</div>;\n  }\n\n  if (!group) {\n    return <div className=\"error-message\">Group not found</div>;\n  }\n\n  return (\n    <div className=\"group-detail\">\n      <div className=\"group-header\">\n        <h1>{group.name}</h1>\n        <p className=\"group-description\">{group.description}</p>\n        \n        <div className=\"group-meta\">\n          <p><strong>Focus:</strong> {group.type}</p>\n          <p><strong>Members:</strong> {group.memberCount}</p>\n          <p><strong>Created:</strong> {formatDate(group.createdAt)}</p>\n          <p><strong>Invite Code:</strong> {group.inviteCode}</p>\n        </div>\n      </div>\n      \n      {error && <div className=\"error-message\">{error}</div>}\n      \n      <div className=\"group-content\">\n        <div className=\"posts-section\">\n          <h2>Group Activity</h2>\n          \n          <form className=\"post-form\" onSubmit={handlePostSubmit}>\n            <textarea\n              placeholder=\"Share an update with the group...\"\n              value={newPost}\n              onChange={(e) => setNewPost(e.target.value)}\n              required\n            ></textarea>\n            <button type=\"submit\" className=\"btn btn-primary\">Post</button>\n          </form>\n          \n          <div className=\"posts-list\">\n            {posts.length === 0 ? (\n              <p>No activity yet. Be the first to post!</p>\n            ) : (\n              posts.map(post => (\n                <div key={post.id} className=\"post-card\">\n                  <div className=\"post-header\">\n                    <span className=\"post-author\">{post.author.name}</span>\n                    <span className=\"post-date\">{formatDate(post.createdAt)}</span>\n                  </div>\n                  \n                  <div className=\"post-content\">{post.content}</div>\n                  \n                  <div className=\"post-actions\">\n                    <button className=\"btn-text\">Like ({post.likes})</button>\n                    <button className=\"btn-text\">Comment</button>\n                  </div>\n                  \n                  {post.comments.length > 0 && (\n                    <div className=\"comments-list\">\n                      {post.comments.map(comment => (\n                        <div key={comment.id} className=\"comment\">\n                          <div className=\"comment-header\">\n                            <span className=\"comment-author\">{comment.author.name}</span>\n                            <span className=\"comment-date\">{formatDate(comment.createdAt)}</span>\n                          </div>\n                          <div className=\"comment-content\">{comment.content}</div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n        \n        <div className=\"members-section\">\n          <h2>Members ({members.length})</h2>\n          <div className=\"members-list\">\n            {members.map(member => (\n              <div key={member.id} className=\"member-card\">\n                <div className=\"member-info\">\n                  <span className=\"member-name\">{member.name}</span>\n                  {member.role === 'admin' && <span className=\"member-badge\">Admin</span>}\n                </div>\n                <span className=\"member-joined\">Joined {formatDate(member.joinedDate)}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"group-actions\">\n        <Link to=\"/groups\" className=\"btn btn-outline\">Back to Groups</Link>\n        <button className=\"btn btn-secondary\">Invite Members</button>\n        <button className=\"btn btn-outline\">Leave Group</button>\n      </div>\n    </div>\n  );\n};\n\nexport default GroupDetail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}